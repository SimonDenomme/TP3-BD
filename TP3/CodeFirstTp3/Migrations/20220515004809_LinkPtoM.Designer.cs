// <auto-generated />
using System;
using CodeFirstTp3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirstTp3.Migrations
{
    [DbContext(typeof(ConferenceContext))]
    [Migration("20220515004809_LinkPtoM")]
    partial class LinkPtoM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArticleParticipant", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("ArticleParticipant");
                });

            modelBuilder.Entity("CodeFirstTp3.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSoumis")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceID");

                    b.ToTable("article");
                });

            modelBuilder.Entity("CodeFirstTp3.Conference", b =>
                {
                    b.Property<int>("ConferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ConferenceID");

                    b.ToTable("conference");
                });

            modelBuilder.Entity("CodeFirstTp3.MembreComite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceID");

                    b.HasIndex("ParticipantId");

                    b.ToTable("membreComite");
                });

            modelBuilder.Entity("CodeFirstTp3.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Dette")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceID");

                    b.ToTable("participant");
                });

            modelBuilder.Entity("ArticleParticipant", b =>
                {
                    b.HasOne("CodeFirstTp3.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstTp3.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstTp3.Article", b =>
                {
                    b.HasOne("CodeFirstTp3.Conference", "Conference")
                        .WithMany()
                        .HasForeignKey("ConferenceID");

                    b.Navigation("Conference");
                });

            modelBuilder.Entity("CodeFirstTp3.MembreComite", b =>
                {
                    b.HasOne("CodeFirstTp3.Conference", "Conference")
                        .WithMany()
                        .HasForeignKey("ConferenceID");

                    b.HasOne("CodeFirstTp3.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.Navigation("Conference");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("CodeFirstTp3.Participant", b =>
                {
                    b.HasOne("CodeFirstTp3.Conference", "Conference")
                        .WithMany()
                        .HasForeignKey("ConferenceID");

                    b.Navigation("Conference");
                });
#pragma warning restore 612, 618
        }
    }
}
